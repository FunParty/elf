<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fooluodi.elf.session.mapping.SessionMapper" >
  <resultMap id="BaseResultMap" type="com.fooluodi.elf.session.model.Session" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="token" property="token" jdbcType="VARCHAR" />
    <result column="login_account" property="loginAccount" jdbcType="TINYINT" />
    <result column="user_agent" property="userAgent" jdbcType="VARCHAR" />
    <result column="user_os" property="userOs" jdbcType="VARCHAR" />
    <result column="user_mac" property="userMac" jdbcType="VARCHAR" />
    <result column="expire_time" property="expireTime" jdbcType="TIMESTAMP" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, token, login_account, user_agent, user_os, user_mac, expire_time, created_at, 
    updated_at
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from elf_session
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from elf_session
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.fooluodi.elf.session.model.Session" >
    insert into elf_session (id, user_id, token, 
      login_account, user_agent, user_os, 
      user_mac, expire_time, created_at, 
      updated_at)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=INTEGER}, #{token,jdbcType=VARCHAR}, 
      #{loginAccount,jdbcType=TINYINT}, #{userAgent,jdbcType=VARCHAR}, #{userOs,jdbcType=VARCHAR}, 
      #{userMac,jdbcType=VARCHAR}, #{expireTime,jdbcType=TIMESTAMP}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.fooluodi.elf.session.model.Session" >
    insert into elf_session
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="token != null" >
        token,
      </if>
      <if test="loginAccount != null" >
        login_account,
      </if>
      <if test="userAgent != null" >
        user_agent,
      </if>
      <if test="userOs != null" >
        user_os,
      </if>
      <if test="userMac != null" >
        user_mac,
      </if>
      <if test="expireTime != null" >
        expire_time,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="token != null" >
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="loginAccount != null" >
        #{loginAccount,jdbcType=TINYINT},
      </if>
      <if test="userAgent != null" >
        #{userAgent,jdbcType=VARCHAR},
      </if>
      <if test="userOs != null" >
        #{userOs,jdbcType=VARCHAR},
      </if>
      <if test="userMac != null" >
        #{userMac,jdbcType=VARCHAR},
      </if>
      <if test="expireTime != null" >
        #{expireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fooluodi.elf.session.model.Session" >
    update elf_session
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="token != null" >
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="loginAccount != null" >
        login_account = #{loginAccount,jdbcType=TINYINT},
      </if>
      <if test="userAgent != null" >
        user_agent = #{userAgent,jdbcType=VARCHAR},
      </if>
      <if test="userOs != null" >
        user_os = #{userOs,jdbcType=VARCHAR},
      </if>
      <if test="userMac != null" >
        user_mac = #{userMac,jdbcType=VARCHAR},
      </if>
      <if test="expireTime != null" >
        expire_time = #{expireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fooluodi.elf.session.model.Session">
    update elf_session
    set user_id = #{userId,jdbcType=INTEGER},
      token = #{token,jdbcType=VARCHAR},
      login_account = #{loginAccount,jdbcType=TINYINT},
      user_agent = #{userAgent,jdbcType=VARCHAR},
      user_os = #{userOs,jdbcType=VARCHAR},
      user_mac = #{userMac,jdbcType=VARCHAR},
      expire_time = #{expireTime,jdbcType=TIMESTAMP},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="getSessionByToken" resultMap="BaseResultMap">
    select
     <include refid="Base_Column_List" />
     from elf_session
     where token = #{token}
  </select>
</mapper>